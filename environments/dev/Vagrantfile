def set_environment_variables()
    vboxmanage = Vagrant::Util::Which.which("VBoxManage") || Vagrant::Util::Which.which("VBoxManage.exe")
    if vboxmanage != nil
        s = Vagrant::Util::Subprocess.execute(vboxmanage, '--version')
        s = s.stdout.strip!
        if s != ""
            parts = s.split("r")
            v = parts.shift
            r = parts.join("r")
            if ! parts.empty?
                r = "r#{r}"
            end
            return \
<<-SCRIPT
cat > "/etc/profile.d/virtualbox-vars.sh" <<EOF
export VIRTUALBOX_VERSION=#{v}
export VIRTUALBOX_REVISION=#{r}
EOF
SCRIPT
        end
    end
    return \
<<-SCRIPT
cat > "/etc/profile.d/virtualbox-vars.sh" <<EOF
# NO VARIABLES
EOF
SCRIPT
end

Vagrant.configure("2") do |config|
  config.vm.box = "debian/stretch64" # debian9
  config.vm.provision "shell", inline: set_environment_variables(), run: "always"
  config.vm.provision "shell", path: "./provision.sh"
  config.disksize.size = '250GB' # requires vagrant plugin: https://github.com/sprotheroe/vagrant-disksize
  config.vm.provider "virtualbox" do |v|
    # next line supposedly keeps time in sync with the host more effectively once vbox additions are installed
    # not sure if this is even required as the vbox additions should handle this...
    # v.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 1000 ]
    v.customize ["modifyvm", :id, "--cpuexecutioncap", "80"]
    v.memory = 1024 * 8 # 8 gigabytes
    v.cpus = 3 # always leave one core for yourself, verify on mac with "sysctl -n hw.ncpu"
  end
end
